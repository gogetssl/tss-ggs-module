#openapi: 3.0.3
#info:
#  title: Swagger ModulesGarden - OpenAPI 3.0
#  description: |-
#    This is a sample ModulesGarden FW Server based on the OpenAPI 3.0 specification.  You can find out more about
#    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the ModulesGarden, we've switched to the design first approach!
#    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
#    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
#  license:
#    name: Apache 2.0
#    url: http://www.apache.org/licenses/LICENSE-2.0.html
#  version: 1.0.11
#externalDocs:
#  description: Find out more about Swagger
#  url: http://swagger.io
#servers:
#  - url: https://dev22.modulesgarden-demo.com/dev/modules/addons/TTSGGSModule/packages/api/endpoint/index.php
#tags:
#  - name: Modules Garden
#    description: Everything about ModulesGarden FW API
#    externalDocs:
#      description: Find out more
#      url: http://swagger.io
#paths:
#  /service/{serviceId}:
#    get:
#      tags:
#        - service
#      summary: Find service by ID
#      description: Returns a single service
#      operationId: home@test#ModulesGarden\TTSGGSModule\Packages\Logs\UI\Pages\LogsDataTable
#      parameters:
#        - name: serviceId
#          in: path
#          description: ID of service to return
#          required: true
#          schema:
#            type: integer
#            format: int64
#      responses:
#        '200':
#          description: successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Service'
#            application/xml:
#              schema:
#                $ref: '#/components/schemas/Service'
#        '400':
#          description: Invalid ID supplied
#        '404':
#          description: Service not found
#    post:
#      tags:
#        - service
#      summary: Update service by ID
#      description: Update service
#      operationId: home@update#ModulesGarden\TTSGGSModule\App\UI\Client\Home\Index\SomeForm
#      parameters:
#        - name: serviceId
#          in: query
#          description: ID of service that needs to be updated
#          required: true
#          schema:
#            type: integer
#            format: int64
#        - name: name
#          in: query
#          description: Name of service that needs to be updated
#          schema:
#            type: string
#        - name: status
#          in: query
#          description: Status of service that needs to be updated
#          schema:
#            type: string
#      responses:
#        '200':
#          description: successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Service'
#            application/xml:
#              schema:
#                $ref: '#/components/schemas/Service'
#        '400':
#          description: Invalid ID supplied
#        '403':
#          description: askwdnqiksmdolswm
#        '404':
#          description: Service not found
#      security:
#        - basicAuth: []
#    delete:
#      tags:
#        - service
#      summary: Update service by ID
#      description: Update service
#      operationId: home@putxxx
#      parameters:
#        - name: serviceId
#          in: path
#          description: ID of service that needs to be updated
#          required: true
#          schema:
#            type: integer
#            format: int64
#        - name: name
#          in: query
#          description: Name of service that needs to be updated
#          schema:
#            type: string
#        - name: status
#          in: query
#          description: Status of service that needs to be updated
#          schema:
#            type: string
#      responses:
#        '200':
#          description: successful operation
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Service'
#            application/xml:
#              schema:
#                $ref: '#/components/schemas/Service'
#        '400':
#          description: Invalid ID supplied
#        '404':
#          description: Service not found
#      security:
#        - basicAuth: []
#components:
#  schemas:
#    Service:
#      type: object
#      properties:
#        id:
#          type: integer
#          format: int64
#          example: 2
#        nameId:
#          type: string
#          example: fehguy
#      xml:
#        name: service
#  securitySchemes:
#    basicAuth:
#      type: http
#      scheme: basic
#      in: header